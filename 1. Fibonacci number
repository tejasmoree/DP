import java.util.Arrays;

public class fibonacci {
    public static int recr(int num) {
        if (num <= 1)
            return num;

        return recr(num - 1) + recr(num - 2);
    }

    public static int memo(int num, int arr[]) {
        if (num <= 1)
            return num;

        if (arr[num] != -1)
            return arr[num];

        return arr[num] = memo(num - 1, arr) + memo(num - 2, arr);
    }

    public static int tabu(int num, int arr[]) {
        arr[0] = 0;
        arr[1] = 1;

        for (int i = 2; i <= num; i++) {
            arr[i] = arr[i - 1] + arr[i - 2];
        }
        return arr[num];
    }

    public static int sopt(int num) {
        int prev2 = 0;
        int prev = 1;

        for (int i = 2; i <= num; i++) {
            int cur = prev + prev2;
            prev2 = prev;
            prev = cur;
        }
        return prev;
    }

    public static void main(String[] args) {
        System.out.println(recr(5));

        int arr[] = new int[5 + 1];
        Arrays.fill(arr, -1);
        System.out.println(memo(5, arr));

        System.out.println(tabu(5, arr));

        System.out.println(sopt(5));
    }
}
